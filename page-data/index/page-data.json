{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Noah's Dev Log","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"클로져에서 self를 캡쳐할 때  를 사용하는 경우는 순환 참조를 방지하기 위해 약한 참조로 클로져 내부에서 해당 클래스의 인스턴스를 사용할때 입니다. 클로져에서 약한 참조를 이용해 특정 인스턴스를 캡쳐하지 않으면 (여기서는 self를 캡쳐한다고 가정) self가 해제될 때까지 기다리고 self는 클로져가 해제될 때까지 기다리는 strong referen…","fields":{"slug":"/Swift/2022-04-08-[weak-self]-무조건-사용하는게-맞는걸까/"},"frontmatter":{"date":"April 08, 2022","title":"[weak self] 무조건 사용하는게 맞는걸까? 🤔","category":"Swift","draft":false}}},{"node":{"excerpt":"여러분 안녕하세요! Noah입니다. 혹시 Git을 사용하면서 commit id를 보신 적이 있나요? 우리는 commit id로 특정 버전을 가리켜 commit을 되돌리기도 하고, 특정 commit의 변경사항을 되돌리기도 합니다. 그렇다면 이 commit id는 어떻게 해서 만들어지는 걸까요? Q. 서버에서 고유한 id를 부여해주나요..?🧐 A. Git은 …","fields":{"slug":"/Computer Science/2022-03-31-git의-commit-id는-어떻게-생성될까(feat.블록체인-트랜잭션id)/"},"frontmatter":{"date":"March 31, 2022","title":"Git의 commit id는 어떻게 생성될까?","category":"computer science","draft":false}}},{"node":{"excerpt":"안녕하세요 Noah입니다 :) 오늘은 Swift의 자료구조 중 배열에 대해 알아보도록 하겠습니다😀 배열은 메모리 영역에 연속되어있는 데이터 구조로 논리적인 순서와 물리적인 순서가 같다는 특징을 가지고 있습니다. 배열은 특정 요소의 조회가 아주 빠르다는 특징을 가지고 있습니다. 특정 요소를 조회할 때 순회(traversing)하는 것이 아니라, 배열의 특징…","fields":{"slug":"/Computer Science/2022-01-23-array---배열/"},"frontmatter":{"date":"January 23, 2022","title":"Array - 배열","category":"Computer Science","draft":false}}},{"node":{"excerpt":"안녕하세요 Noah입니다 :) 오늘은 Gang of Four 소프트웨어 디자인 패턴 중 행위 패턴에 속하는 Observer Pattern 에 대해서 알아보도록 하겠습니다. iOS에서 Observer Pattern은 Foundation framework의 NotificationCenter, KVO(Key Value Observing), Property Ob…","fields":{"slug":"/Design Pattern/observer-pattern/"},"frontmatter":{"date":"December 25, 2021","title":"Observer Pattern","category":"Design Pattern","draft":false}}},{"node":{"excerpt":"안녕하세요 Noah입니다 :) 좋은 개발자는 좋은 코드를 짜야 할 것입니다. 제가 생각하는 좋은 코드란, 팀원들이 보기에 좋은 코드를 작성하고, 안정적이고 속도가 빠른 코드를 작성해 결과적으로 앱을 사용하는 사용자에게 좋은 경험을 안겨주는 것이 좋은 코드라고 생각합니다. 이번 시간에는 좋은 코드를 작성하기 위한 초석으로 Swift 성능 이해하기라는 제목으…","fields":{"slug":"/Swift/2021-12-21-swift-성능-이해하기-struct-class/"},"frontmatter":{"date":"December 21, 2021","title":"Swift 성능 이해하기 struct-class","category":"Swift","draft":false}}},{"node":{"excerpt":"안녕하세요 Noah입니다 :) 오늘은 iOS 어플리케이션의 진입점(Entry Point) 에 대해 알아보며, 기본적인 앱의 구조에 대해 살펴보도록 하겠습니다😃 Entry Point (진입점) 프로그램 실행은 프로그래밍 언어나 운영체제 등에 의해 정의된 관용명을 통한, 지정된 이름으로 시작될 수 있다. 많은 언어에서(특히 C) 이 지정된 이름은 이라고 불리…","fields":{"slug":"/iOS/2021-10-25-ios-어플리케이션의-entrypoint/"},"frontmatter":{"date":"October 25, 2021","title":"iOS 어플리케이션의 EntryPoint","category":"iOS","draft":false}}},{"node":{"excerpt":"여러분 안녕하세요 Noah입니다:) 오늘은 SwiftLint를 좀 더 효율적으로, Git-Hook과 함께 사용하는 방법에 대해 소개해보려 합니다 :) 먼저 SwiftLint가 처음이신 분들을 위해 잠깐 설명하고 가겠습니다!! 이미 잘 사용하고 계신 분들이라면 이 부분은 Skip 하셔도 무방합니다! 우리 Swift는 정말 많이 들어봤는데 뒤에붙은 lint는…","fields":{"slug":"/Tools/2021-10-15-swiftlint-힙하게-사용하기(with-git-hook)/"},"frontmatter":{"date":"October 15, 2021","title":"SwiftLint 힙하게 사용하기(with Git-Hook)","category":"Tools","draft":false}}},{"node":{"excerpt":"여러분!! 안녕하세요 Noah입니다:) 가을이 성큼 다가왔네요 🍁 오늘은 노션을 좀 더 개성 있게, 취향에 맞게 사용하는 법을 들고 와봤습니다~~!! 재밌게 봐주세요 👀 우리가 그동안 썼던 노션은 글씨체가 한정되어있었는데요, 그나마 바꿀 수 있는 옵션은 글씨체의 style을 Serif 혹은 Mono로 바꾸는 것뿐이었습니다🥲 노션 너무나 훌륭한 툴이지만 개…","fields":{"slug":"/Tools/2021-10-05-notion-글꼴-테마-바꾸기/"},"frontmatter":{"date":"October 05, 2021","title":"Notion 글꼴 테마 바꾸기","category":"Tools","draft":false}}},{"node":{"excerpt":"안녕하세요 Noah입니다 :) 오늘은 문법 공부를 하며 궁금증을 해소하기 위해 찾아보았던 내용을 주제로 풀어볼 예정입니다. 먼저 궁금점의 시작은 다음과 같았습니다. 구조체의 initializer로 생성한 인스턴스는 인스턴스가 let(상수)으로 선언이 되어 있으면, 인스턴스의 속성이 가변 속성(var)으로 되어있어도 변하지 않는것 이었습니다. 반면 Clas…","fields":{"slug":"/Swift/2021-09-01-swift-class,-struct는-어디에-저장될까/"},"frontmatter":{"date":"September 01, 2021","title":"Swift에서 Class, Struct는 어디에 저장될까?","category":"Swift","draft":false}}},{"node":{"excerpt":"안녕하세요 Noah입니다 :) 이번 Xcode 13.0 베타에는 새로운 기능이 추가되었는데요, 여러 기능들이 추가되었지만 그중에 단연 돋보이는 신기능은 Vim입니다~!!🎉🎉🎉 Xcode13에 추가된 다양한 기능은 이곳을 참조해주세요:) 그동안 Xcode에서 Vim을 사용하기 위해서는 XVim과 같은 플러그인을 이용해 Vim을 사용했었는데요, 설치도 문서를…","fields":{"slug":"/Tools/2021-08-25-xcode의-새식구-vim/"},"frontmatter":{"date":"August 25, 2021","title":"Xcode의 새식구 Vim","category":"Tools","draft":false}}},{"node":{"excerpt":"안녕하세요 Noah입니다 :) 날이 아주 덥습니다 여러분~! ⛱☀️ 건강 유의하셔서 즐코딩하세요 ㅎㅎ🍉 오늘은 if문을 이용한 Optional Binding과 guard문을 이용한 Optional Binding에 대해 알아보도록 하겠습니다. Optional type의 값을 안전하게 가져오기 위해서는 Optional Binding을 해주어야 합니다. 먼저 i…","fields":{"slug":"/Swift/2021-07-21-if-let과-guard-let/"},"frontmatter":{"date":"July 21, 2021","title":"if let과 guard let","category":"Swift","draft":false}}},{"node":{"excerpt":"안녕하세요 Noah입니다 :) 이번 시간에는 Sorting 알고리즘 톺아보기 2부 마지막 시간입니다!!🥺 🥺 이번에 살펴볼 Sorting 알고리즘은 Quick Sort입니다. Quick Sort는 정렬 알고리즘 중 가장 인기 있는 알고리즘 중에 하나인데요, 1959년에 영국의 Tony Hoare란 분에 의해 고안되었다고 합니다. Quick Sort 역시 …","fields":{"slug":"/Algorithms/2021-07-19-quick-sort(퀵-정렬)/"},"frontmatter":{"date":"July 19, 2021","title":"Swift Quick Sort(퀵 정렬)","category":"Algorithms","draft":false}}},{"node":{"excerpt":"안녕하세요 Noah입니다 :) 이번 시간에는 Sorting 알고리즘 톺아보기 1부보다 조금 더 난이도가 있는 Sorting 알고리즘을 다루는 Sorting 알고리즘 톺아보기 2부를 진행하도록 하겠습니다 😄 이번 시간에 살펴볼 Sorting 알고리즘은 Merge Sort입니다. Merge Sort는 Computer Science의 divide and con…","fields":{"slug":"/Algorithms/2021-07-16-merge-sort(합병정렬)/"},"frontmatter":{"date":"July 16, 2021","title":"Swift Merge Sort(합병정렬)","category":"Algorithms","draft":false}}},{"node":{"excerpt":"안녕하세요 Noah입니다 :) 이번 시간에도 이어서 Sorting 알고리즘 톺아보기 1부를 진행하도록 하겠습니다 😄 이번 시간에 살펴볼 Sorting 알고리즘은 Insertion Sort입니다. Insertion Sort 먼저 Insertion Sort가 데이터를 정렬하는 모습부터 먼저 살펴보겠습니다.  아직 코드와 정렬 순서를 살펴보지 않았기에 자세히는…","fields":{"slug":"/Algorithms/2021-07-08-insertion-sort/"},"frontmatter":{"date":"July 08, 2021","title":"Swift Insertion Sort(삽입정렬)","category":"Algorithms","draft":false}}},{"node":{"excerpt":"안녕하세요 Noah입니다 :) 지난 시간에 이어 Sorting 알고리즘 톺아보기 1부를 진행하도록 하겠습니다 😄 이번 시간에 살펴볼 내용은 Bubble Sort(거품 정렬)입니다. Bubble Sort는 이해하기 쉬워 교육용으로 가장 많이 쓰이는 정렬 알고리즘입니다. 그만큼 직관적이며, 이해하기 쉽습니다. Bubble Sort 먼저 Bubble Sort가…","fields":{"slug":"/Algorithms/2021-07-07-bubble-sort/"},"frontmatter":{"date":"July 07, 2021","title":"Swift Bubble Sort(거품정렬)","category":"Algorithms","draft":false}}},{"node":{"excerpt":"안녕하세요 Noah입니다 :) 본격적으로 장마가 시작되나 봅니다~ 다들 우산 챙겨 다니세요!!☂️ 오늘은 정렬 알고리즘에 대해 알아보려 합니다. Computer Science에서의 정렬 알고리즘은 item을 번호순이나 사전 순으로 일정한 순서대로 열거하는 알고리즘입니다. Swift에서는 간단하게 sort() 메소드 혹은 sorted() 메소드를 이용해 데이…","fields":{"slug":"/Algorithms/2021-07-05-selection-sort/"},"frontmatter":{"date":"July 05, 2021","title":"Swift Selection Sort(선택정렬)","category":"Algorithms","draft":false}}},{"node":{"excerpt":"안녕하세요 noah입니다 :) 오늘은 Swift 컬렉션 패키지에 대해 소개해보려 합니다. 요즘 알고리즘 문제 풀이를 하며 Swift에서 제공하는 여러 자료구조에 대해 찾아보던 중 2021년 4월 5일 Apple이 공개한 Swift 컬렉션 패키지를 알게 되었습니다. Swift의 공식 blog 글에 따르면 이번에 새로 공개한 Swift 컬렉션 패키지에서는 3…","fields":{"slug":"/Swift/2021-07-04-apple이-새로-공개한-오픈소스-swift-컬렉션-패키지/"},"frontmatter":{"date":"July 04, 2021","title":"Apple이 새로 공개한 오픈소스 Swift 컬렉션 패키지!","category":"Swift","draft":false}}},{"node":{"excerpt":"안녕하세요 Noah입니다 :) 오늘은 Hash algorithm의 개념에 대해 간략하게 알아보려 합니다. Hash는 Key-value를 쌍으로 데이터를 저장하는 자료구조입니다. 리소스를 포기하고 속도를 취한 자료구조이며, Space-Time trade off의 대표적인 알고리즘에 속합니다. Hash algorithm은 O(1)의 시간 복잡도를 지향합니다.…","fields":{"slug":"/Algorithms/2021-06-24-해시-알고리즘(hash-algorithm)/"},"frontmatter":{"date":"June 24, 2021","title":"해시 알고리즘(Hash algorithm)","category":"Algorithms","draft":false}}},{"node":{"excerpt":"안녕하세요 Noah입니다 :) 애자일을 검색해보면 여러 용어가 나옵니다. 애자일, 애자일 방법론, 익스트림 프로그래밍, 스크럼, 스프린트 등등 이러한 용어들을\n살펴보며, 애자일 개발 프로세스에 대해 알아보도록 하겠습니다. 애자일(agile)은 우리말로 ‘날렵한’, ‘민첩한’, ‘기민한’ 이라는 의미를 지닙니다. 애자일 프로세스는 고객의 요구에 민첩하게 대…","fields":{"slug":"/Computer Science/2021-06-21-애자일-개발-프로세스-톺아보기/"},"frontmatter":{"date":"June 21, 2021","title":"애자일 개발 프로세스 톺아보기","category":"Computer Science","draft":false}}},{"node":{"excerpt":"안녕하세요 :) Noah입니다. Oracle DB를 사용할 일이 생겨 Oracle DB를 Mac에서 설치하고 사용하는 과정을 소개해드리려 합니다. 이 포스트에서는 Oracle에서 제공하는 3가지 라이선스의 데이터베이스 중 몇 가지 제약사항이 있지만 대부분의 기능을 포함하고 있어 학습용으로 적합한 Express Edition을 사용해보도록 하겠습니다. 원래…","fields":{"slug":"/Tools/2021-04-17-mac에서-oracledb사용하기-근데-이제-docker를-곁들인/"},"frontmatter":{"date":"April 17, 2021","title":"Mac에서 OracleDB사용하기, 근데 이제 docker를 곁들인","category":"Tools","draft":false}}},{"node":{"excerpt":"안녕하세요 :) Noah입니다. 오늘은 TCP와 UDP의 통신방식에 관한 얘기를 나눠볼까 합니다.\n인간사회에 여러 가지 규칙이나 규약이 있듯, 컴퓨터 네트워크 분야에도 여러 가지 규약이 있습니다. 이러한 규약을 정하는 기관 중 국제표준화기구(ISO)에서 통신이 일어나는 과정을 단계별로 쉽게 파악하고, 다른 시스템 간의 원활한 통신을 위해 제안한 통신규약인…","fields":{"slug":"/Computer Science/2021-03-23-tcp-와-udp에-관하여/"},"frontmatter":{"date":"March 25, 2021","title":"TCP와 UDP에 관하여","category":"Computer Science","draft":false}}},{"node":{"excerpt":"안녕하세요 :) Noah입니다. Swift에서는 함수가 First-class Function으로써 사용됩니다. Functional Programming a.k.a FP 에서 많이 언급되는 일급함수를 이번 기회를 통해 알아보고 정리해보는 시간을 가져보고자 합니다. First-class Function이란 다음의 조건을 만족하는 함수를 의미합니다. 이에 대한…","fields":{"slug":"/Swift/2021-02-09-swift의-함수는-일급함수인가/"},"frontmatter":{"date":"February 09, 2021","title":"Swift의 함수는 일급함수인가?","category":"Swift","draft":false}}},{"node":{"excerpt":"안녕하세요 :) Noah입니다. 친구들과 Slack을 조금 더 효율적으로 사용하기 위해 Slack에 Github을 연동하였는데, 그 과정을 나눠보려 합니다 :) 채널 개설하기 먼저 채널을 하나 개설합니다. 그 다음 채팅창에 를 입력하게 되면 다음과 같은 창이 뜨게 되는데, Github을 검색하고 Slack workspace에 설치를 진행합니다. 설치를 진…","fields":{"slug":"/Tools/2021-01-09-slack,-github-연동하기/"},"frontmatter":{"date":"January 09, 2021","title":"Slack, Github 연동하기","category":"Tools","draft":false}}},{"node":{"excerpt":"안녕하세요 :) Noah입니다. 오늘은 Swift Extension중 Cool한 Extension에 PR을 보내본 이야기를 나눠보려 합니다🤓 (PR이라고 하기도 부끄럽지만 ㅎㅎ..) Swift를 공부하기 시작한지 얼마되지 않은 저는 사용할만한 여러 Xcode Extension을 찾아보고 있었습니다. 평소 코드 스타일, Lint에 관심이 많기에 Swift를…","fields":{"slug":"/Swift/2020-12-24-xcode-extension에-contribute를-하다니!!/"},"frontmatter":{"date":"December 24, 2020","title":"Xcode Extension에 contribute를 하다니!!","category":"Swift","draft":false}}},{"node":{"excerpt":"안녕하세요 :) Noah입니다. 이 글은 애플의 스위프트 공식문서 를 스터디하며 중간중간 저의 개인적인 생각을 덧 붙여 쓴 글 입니다. “함수란 특정 기능(작업)을 수행하는 코드의 집합이다.” 함수를 선언할때는  키워드를 이용하여 선언하며 사용할때는 함수의 이름을 호출하여 사용해야합니다. 당연히 함수의 이름은 함수가 어떠한 기능을 수행하는지 다른 사람이…","fields":{"slug":"/Swift/2020-12-19-swift에서의-functions/"},"frontmatter":{"date":"December 19, 2020","title":"Swift에서의 Functions","category":"Swift","draft":false}}},{"node":{"excerpt":"안녕하세요 :) Noah입니다. 이글은 원문을 스터디하며 내용을 덧붙여 쓴 글 입니다. 원문 : Don’t Use JavaScript Variables Without Knowing Temporal Dead Zone, TDZ을 모른 채 자바스크립트 변수를 사용하지 말라 Hoisting이란 ? Hoisting은 ”끌어올리다”라는 뜻을 가지고 있습니다. Jav…","fields":{"slug":"/JavaScript/2020-11-04-temporal-dead-zone,-hoisting에-관하여/"},"frontmatter":{"date":"November 04, 2020","title":"Temporal Dead Zone, Hoisting에 관하여","category":"JavaScript","draft":false}}}]}},"pageContext":{}}}