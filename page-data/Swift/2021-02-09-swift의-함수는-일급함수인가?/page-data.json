{"componentChunkName":"component---src-templates-blog-post-js","path":"/Swift/2021-02-09-swift의-함수는-일급함수인가?/","result":{"data":{"site":{"siteMetadata":{"title":"Noah's Dev Log","author":"[SeungHyun]","siteUrl":"https://noah0316.github.io","comment":{"disqusShortName":"","utterances":"noah0316/noah0316.github.io"},"sponsor":{"buyMeACoffeeId":"q6PBeY92M"}}},"markdownRemark":{"id":"cfca0085-9892-5b20-a8ec-1bebc87749f8","excerpt":"Swift에서는 함수가 First-class Function으로써 사용됩니다. Functional Programming a.k.a FP 에서 많이 언급되는 일급함수를 이번 기회를 통해 알아보고 정리해보는 시간을 가져보고자 합니다. First-class Function이란 다음의 조건을 만족하는 함수를 의미합니다. 이에 대한 개념은 1960년대 중반 Christopher Strachey…","html":"<p>Swift에서는 함수가 First-class Function으로써 사용됩니다.<br>\nFunctional Programming <del>a.k.a FP</del> 에서 많이 언급되는 일급함수를 이번 기회를 통해 알아보고 정리해보는 시간을 가져보고자 합니다.</p>\n<p><a href=\"https://en.wikipedia.org/wiki/First-class_function\">First-class Function</a>이란 다음의 조건을 만족하는 함수를 의미합니다.<br>\n이에 대한 개념은 1960년대 중반 <a href=\"https://en.wikipedia.org/wiki/Christopher_Strachey\">Christopher Strachey</a> 에 의해 처음 등장했다고 합니다.</p>\n<blockquote>\n<ol>\n<li>함수는 상수와 변수에 저장될 수 있다.</li>\n<li>함수의 매개변수에 다른 함수를 인자로 전달할 수 있다.</li>\n<li>함수는 함수의 반환 값이 될 수 있다.</li>\n</ol>\n</blockquote>\n<p>이제 First-class Function의 조건을 하나씩 살펴보며,<br>\nSwift에서 함수가 First-class Function으로 취급되는지 확인해보겠습니다.</p>\n<h3 id=\"1-함수는-상수와-변수에-저장-될-수-있다\" style=\"position:relative;\"><a href=\"#1-%ED%95%A8%EC%88%98%EB%8A%94-%EC%83%81%EC%88%98%EC%99%80-%EB%B3%80%EC%88%98%EC%97%90-%EC%A0%80%EC%9E%A5-%EB%90%A0-%EC%88%98-%EC%9E%88%EB%8B%A4\" aria-label=\"1 함수는 상수와 변수에 저장 될 수 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 함수는 상수와 변수에 저장 될 수 있다.</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> constPrintFoo <span class=\"token operator\">=</span> foo\n<span class=\"token keyword\">var</span> varPrintFoo <span class=\"token operator\">=</span> foo\n\n<span class=\"token function\">constPrintFoo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">varPrintFoo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Prints foo</span>\n<span class=\"token comment\">//        foo</span></code></pre></div>\n<h3 id=\"2-함수를-다른-함수에-인자로-전달할-수-있다\" style=\"position:relative;\"><a href=\"#2-%ED%95%A8%EC%88%98%EB%A5%BC-%EB%8B%A4%EB%A5%B8-%ED%95%A8%EC%88%98%EC%97%90-%EC%9D%B8%EC%9E%90%EB%A1%9C-%EC%A0%84%EB%8B%AC%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8B%A4\" aria-label=\"2 함수를 다른 함수에 인자로 전달할 수 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 함수를 다른 함수에 인자로 전달할 수 있다.</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">printOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">printOneTwo</span><span class=\"token punctuation\">(</span><span class=\"token number\">_</span> someFunction<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">someFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printOneTwo</span><span class=\"token punctuation\">(</span>printOne<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Prints 1</span>\n<span class=\"token comment\">//        2</span></code></pre></div>\n<h3 id=\"3-함수는-함수의-반환-값이-될-수-있다\" style=\"position:relative;\"><a href=\"#3-%ED%95%A8%EC%88%98%EB%8A%94-%ED%95%A8%EC%88%98%EC%9D%98-%EB%B0%98%ED%99%98-%EA%B0%92%EC%9D%B4-%EB%90%A0-%EC%88%98-%EC%9E%88%EB%8B%A4\" aria-label=\"3 함수는 함수의 반환 값이 될 수 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 함수는 함수의 반환 값이 될 수 있다.</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">printTrue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">printFalse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">printTrueOrFalse</span><span class=\"token punctuation\">(</span><span class=\"token number\">_</span> isTrue<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Bool</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> isTrue <span class=\"token operator\">?</span> printTrue <span class=\"token punctuation\">:</span> printFalse\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token function\">printTrueOrFalse</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Prints true</span></code></pre></div>\n<p>이러한 특성은 자바스크립트와 같은 <strong>동적 언어</strong>에서 보았던 기능인데,<br>\nSwift와 같은 <strong>정적 언어</strong>에서 이러한 방식을 지원하는 것이 상당히 흥미로웠습니다.</p>\n<p>또한 함수 간 동등비교 연산에 관한 내용이 궁금하여 찾아본 결과,<br>\n이는 Swift에서 의도적으로 지원하지 않는 기능이라고 합니다.</p>\n<blockquote>\n<p><a href=\"https://ko.wikipedia.org/wiki/%ED%81%AC%EB%A6%AC%EC%8A%A4_%EB%9D%BC%ED%8A%B8%EB%84%88\">Chris Lattner</a>(<del>LLVM, Swift를 만든 전설의 개발자!!</del>) wrote on the developer forums: <a href=\"https://stackoverflow.com/questions/24111984/how-do-you-test-functions-and-closures-for-equality\">링크</a></p>\n<p>This is a feature we intentionally do not want to support. There are a variety of things that will cause pointer equality of functions (in the swift type system sense, which includes several kinds of closures) to fail or change depending on optimization. If ”===” were defined on functions, the compiler would not be allowed to merge identical method bodies, share thunks, and perform certain capture optimizations in closures. Further, equality of this sort would be extremely surprising in some generics contexts, where you can get reabstraction thunks that adjust the actual signature of a function to the one the function type expects.</p>\n</blockquote>\n<p>Swift에서는 함수를 First-class Function으로 취급하기 때문에 map과 같은 high-order function을 사용할 수 있음을 이번 기회를 통해 알게 되었습니다. 🙂</p>\n<p>혹시나 제가 잘못 알고 있는 부분이 있거나, 오타 혹은 궁금한 점 있으시면 댓글로 알려주시면 감사하겠습니다!!😎</p>\n<blockquote>\n<p>참고 :<br>\n<a href=\"https://cocoacasts.com/swift-fundamentals-what-are-first-class-functions-in-swift\">https://cocoacasts.com/swift-fundamentals-what-are-first-class-functions-in-swift</a><br>\n<a href=\"https://en.wikipedia.org/wiki/First-class_function\">https://en.wikipedia.org/wiki/First-class_function</a></p>\n</blockquote>","frontmatter":{"title":"Swift의 함수는 일급합수인가?","date":"February 09, 2021"}}},"pageContext":{"slug":"/Swift/2021-02-09-swift의-함수는-일급함수인가?/","previous":{"fields":{"slug":"/Swift/2021-02-06-swift---일급-객체로서의-함수/"},"frontmatter":{"title":"Swift의 함수는 일급함수인가?","category":"Swift","draft":false}},"next":null}}}