{"componentChunkName":"component---src-templates-blog-post-js","path":"/Algorithms/2021-07-07-bubble-sort/","result":{"data":{"site":{"siteMetadata":{"title":"Noah's Dev Log","author":"[SeungHyun]","siteUrl":"https://noah0316.github.io","comment":{"disqusShortName":"","utterances":"noah0316/noah0316.github.io"},"sponsor":{"buyMeACoffeeId":"q6PBeY92M"}}},"markdownRemark":{"id":"b9b28329-58f1-5c5e-8d3a-f785f9ffba2f","excerpt":"안녕하세요 Noah입니다 :) 지난 시간에 이어 Sorting 알고리즘 톺아보기 1부를 진행하도록 하겠습니다 😄 이번 시간에 살펴볼 내용은 Bubble Sort(거품 정렬)입니다. Bubble Sort는 이해하기 쉬워 교육용으로 가장 많이 쓰이는 정렬 알고리즘입니다. 그만큼 직관적이며, 이해하기 쉽습니다. Bubble Sort 먼저 Bubble Sort…","html":"<p>안녕하세요 Noah입니다 :)</p>\n<p>지난 시간에 이어 <strong>Sorting 알고리즘 톺아보기 1부</strong>를 진행하도록 하겠습니다 😄</p>\n<p>이번 시간에 살펴볼 <strong>내용은 Bubble Sort(거품 정렬)</strong>입니다.</p>\n<p><strong>Bubble Sort</strong>는 이해하기 쉬워 교육용으로 가장 많이 쓰이는 정렬 알고리즘입니다.<br>\n그만큼 <strong>직관적이며, 이해하기 쉽습니다.</strong></p>\n<h2 id=\"bubble-sort\" style=\"position:relative;\"><a href=\"#bubble-sort\" aria-label=\"bubble sort permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bubble Sort</h2>\n<p>먼저 Bubble Sort가 데이터를 정렬하는 모습부터 먼저 살펴보겠습니다.</p>\n<p align=\"center\">\n<img src=\"/e164c2436ed5486ed13e54135a1d009a/1.gif\" width=\"300\">\n</p><center>Bubble Sort</center>\n<p></p>\n<p>마치 탄산음료를 마실 때 <strong>거품이 올라오는 모습</strong>과 비슷하네요 :)</p>\n<p>예시를 보면 <strong>가장 왼쪽</strong>부터 <strong>큰 값의 자리</strong>가 <strong>확정</strong>되며 <strong>정렬</strong>이 되는 모습을 확인할 수 있습니다.</p>\n<p><strong>Bubble Sort</strong>는 현재 element를 인접 인덱스(현재 인덱스 + 1)와 대소를 비교하며<br>\n<strong>큰 숫자</strong>를 <strong>배열의 뒤쪽</strong>으로 swap 하며 정렬을 진행합니다.</p>\n<p>따라서 <strong>Outer loop</strong>를 <strong>한번 순회</strong>할 때마다 <strong>가장 큰 숫자</strong>가 배열의 맨 뒤 쪽으로 가며<br>\nelement 하나의 <strong>자리가 확정</strong>됩니다.</p>\n<p><strong>Bubble Sort</strong>를 지난 시간과 마찬가지로 <strong>swapAt()메소드</strong>를 이용해 Swift로 구현해보도록 하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token builtin\">Foundation</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">bubbleSort</span><span class=\"token punctuation\">(</span><span class=\"token number\">_</span> array<span class=\"token punctuation\">:</span> <span class=\"token keyword\">inout</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">Int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>array<span class=\"token punctuation\">.</span><span class=\"token builtin\">count</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>array<span class=\"token punctuation\">.</span><span class=\"token builtin\">count</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> array<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                array<span class=\"token punctuation\">.</span><span class=\"token function\">swapAt</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">bubbleSort</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>array<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [1, 2, 3, 4, 5, 6, 7, 8]</span></code></pre></div>\n<p>위의 <code class=\"language-text\">array</code>가 정렬되는 모습은 다음과 같습니다.</p>\n<p align=\"center\">\n<img src=\"/d4c88b8cc620af6af67c33910899fcf7/2.gif\">\n</p><center>Simulation</center>\n<p></p>\n<p><strong>Bubble Sort 정렬 순서</strong></p>\n<ol>\n<li><strong>현재 element</strong>와 <strong>다음 element</strong>(현재 index + 1) 비교 후<br>\n<strong>현재 element</strong> 숫자가 <strong>더 크다면</strong> <strong>다음 element와 swap</strong> 한다.</li>\n<li><strong>Outer loop</strong>를 한번 순회할 때마다 <strong>element 하나의 최종위치가 확정</strong>된다.</li>\n<li>1, 2를 <strong>Outer loop</strong>의 <strong>배열 길이 -1</strong>까지 <strong>반복</strong>한다.</li>\n</ol>\n<p><strong>순회 범위</strong></p>\n<p><strong>Outer loop의 순회 범위</strong> : 0 to 배열 길이 - 1</p>\n<p><strong>Inner loop의 순회 범위</strong> : 0 to 확정된 자리 제외 + 1</p>\n<p>다음으로 <strong>Bubble Sort</strong>의 <strong>시간복잡도</strong>를 살펴보도록 하겠습니다.</p>\n<ul>\n<li>Best : O(n)</li>\n<li>Worst : O(n^2)</li>\n<li>Average : O(n^2)</li>\n</ul>\n<p><strong>Best의 경우</strong> 이미 정렬되어있는 데이터가 주어졌을 때는 <strong>Swap이 일어나지 않기 때문에</strong><br>\n<strong>O(n)</strong>의 <strong>시간복잡도</strong>가 나오게 됩니다.</p>\n<p>여기까지 <strong>Sorting 알고리즘 톺아보기 1부</strong> <strong>Bubble Sort</strong>였습니다 😄</p>\n<p>혹시 제가 잘못 알고 있는 부분이 있거나, 오타 혹은 궁금한 점 있으시면 댓글로 알려주시면 감사하겠습니다!!😎</p>\n<blockquote>\n<p>참고</p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Bubble_sort\">위키 백과 거품 정렬</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>이미지 출처</p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/File:Bubble_sort_animation.gif\">거품 정렬 애니메이션</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/File:Bubble-sort-example-300px.gif\">거품 정렬 시뮬레이션</a></li>\n</ul>\n</blockquote>","frontmatter":{"title":"Swift Bubble Sort(거품정렬)","date":"July 07, 2021"}}},"pageContext":{"slug":"/Algorithms/2021-07-07-bubble-sort/","previous":{"fields":{"slug":"/Algorithms/2021-07-05-selection-sort/"},"frontmatter":{"title":"Swift Selection Sort(선택정렬)","category":"Algorithms","draft":false}},"next":{"fields":{"slug":"/Algorithms/2021-07-08-insertion-sort/"},"frontmatter":{"title":"Swift Insertion Sort(삽입정렬)","category":"Algorithms","draft":false}}}}}